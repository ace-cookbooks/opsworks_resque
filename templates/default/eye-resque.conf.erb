# This file was generated by chef for <%= @node[:fqdn] %>

require File.join(File.dirname(__FILE__), "config.rb")

Eye.application 'resque' do
  <% @env ||= {} -%>
  env = { <%= @env.reduce([]){|ary,hash| ary << "'#{hash.first}' => '#{hash.last}'"}.join(', ') %> }
  working_dir '<%= @dir %>'
  stdall 'log/resque.log'
  clear_env true

  start_grace 45.seconds
  restart_grace 45.seconds
  stop_grace 45.seconds

  trigger :flapping, times: 5, within: 5.minute, retry_in: 10.minutes
  check :memory, below: 350.megabytes, every: 30.seconds, min_tries: 3, max_tries: 5

  daemonize true
  stop_on_delete true

  # We intentionally don't kill the resque workers.  This is a problem when terminating nodes.
  # This will be resolved with sidekiq.
  stop_signals [:QUIT]
  restart_command 'kill -QUIT {PID}'

  uid '<%= @uid %>'
  gid '<%= @gid %>'

  start_command '<%= @dir %>/bin/rake -f <%= @dir %>/Rakefile environment resque:work'

  workers = <%= @workers %>

  workers.each do |group_name, info|
    info[:num].times do |i|
      group group_name do
        process "#{group_name}-#{i}" do
          env 'QUEUE' => info[:queue]
          monitor_children
        end
      end
    end
  end
end
