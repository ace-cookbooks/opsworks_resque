# This file was generated by chef for <%= @node[:fqdn] %>

require File.join(File.dirname(__FILE__), "config.rb")

Eye.application 'resque-scheduler' do
  <% if node['eye']['notify'] -%>
  notify <%= node['eye']['notify'] %>
  <% end -%>
  <% @env ||= {} -%>
  env(<%= @env %>)
  working_dir '<%= @dir %>'
  stdall 'log/resque-scheduler.log'
  clear_env true

  start_grace 30.seconds
  restart_grace 5.seconds
  stop_grace 5.seconds

  trigger :flapping, times: 5, within: 5.minute, retry_in: 10.minutes
  check :memory, below: 350.megabytes, every: 30.seconds, times: [3, 5]

  stop_on_delete true

  # We intentionally don't kill the resque workers.  This is a problem when terminating nodes.
  # This will be resolved with sidekiq.
  stop_signals [:QUIT]
  restart_command 'kill -QUIT {PID}'

  uid '<%= @uid %>'
  gid '<%= @gid %>'

  process "resque-scheduler" do
    pid_file "tmp/pids/resque-scheduler.pid"
    daemonize true
    start_command '<%= @dir %>/bin/rake -f <%= @dir %>/Rakefile resque:scheduler'
  end
end
